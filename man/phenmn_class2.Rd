% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/phenmn_class2.R
\name{phenmn_class2}
\alias{phenmn_class2}
\title{phenmn_class2}
\usage{
phenmn_class2(data, colname, pat_exp, cl_to, trim = F, develop = T)
}
\arguments{
\item{data}{data.frame or SpatialPointData.frame.}

\item{colname}{charater - name of column containing the strings}

\item{pat_exp}{character - expressions which will be used for pattern matching}

\item{cl_to}{character - classnames. Must be of same lenght as 'pat_exp'}

\item{trim}{boolean - if TRUE will trim rows which have none applied class (0).}

\item{develop}{boolean - if TRUE will NOT delete columns which are used to identify multiple matches. This is used to check the function.}
}
\value{
returns the dataframe with an additional column containing the classes.
}
\description{
Phenomenon Classification. Semi-automatic classification of strings by expressions.
}
\note{
The data may match with multiple patterns which could lead to more than 1 class for a single items.
If single items contain multiple classes the function will provide a warning.

TEXT describing other cases! coming soon
}
\examples{
# load librarys
require(LinguGeo)
require(stringr)

# load data
csv <- read.csv(system.file("extdata","hunde_utm.csv",package = "LinguGeo"))
# take a look
head(csv)

# reclassify "hunde" using the old version and trim all rows with no class (0)
new_class <- phenmn_class(data=csv,colname = "hunde",
                          pat_exp = c("nd|nt","ng|n.g","nn|n$")
                          ,cl_to = c("nd"   ,"ng"    ,"nn"))


# compare to new version
new_class <- phenmn_class2(data=csv,colname = "hunde",
                           pat_exp = c("nd|nt","ng|n.g","nn|n$")
                           ,cl_to = c("nd"   ,"ng"    ,"nn")
                           ,trim=T)

# test for n items > 2
# get test data
testdata <- csv[1:5,]
testdata$hunde[1] <- "Hunde, Hunn, Hung"
testdata$hunde[2] <- "Hude, Hunng, Hunnd, Hunde"

test <- phenmn_class2(data=testdata,colname = "hunde",pat_exp = c("nd|nt","ng|n.g","nn|n$"),
                      cl_to = c("nd"   ,"ng"    ,"nn"))
}
\author{
Andreas SchÃ¶nberg
}
